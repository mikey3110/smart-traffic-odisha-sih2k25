import type { Dispatch, MouseEvent, SetStateAction } from 'react';
import type { CommonProps } from '../../types/index.js';
import type { ToggleButtonDomRef } from '../../webComponents/ToggleButton/index.js';
import type { ObjectPagePropTypes } from '../ObjectPage/types/index.js';
interface ObjectPageAnchorBarPropTypes extends CommonProps {
    /**
     * Determines if the header content is visible.
     */
    headerContentVisible: boolean;
    /**
     * Defines if the pin button is hidden.
     */
    hidePinButton: boolean;
    /**
     * Determines if the header is initially pinned .
     */
    headerPinned?: boolean;
    /**
     * Set the header to the state pinned.
     */
    setHeaderPinned?: Dispatch<SetStateAction<boolean>>;
    /**
     * Toggles the header content to be hidden or visible .
     */
    onToggleHeaderContentVisibility: (e: any) => void;
    /**
     * Highlight title when hovered.
     */
    onHoverToggleButton?: (e: MouseEvent<ToggleButtonDomRef>) => void;
    /**
     * Defines internally used accessibility properties/attributes.
     */
    accessibilityAttributes?: ObjectPagePropTypes['accessibilityAttributes']['objectPageAnchorBar'];
    /**
     * Fired when the `headerContent` changes its pinned state.
     */
    onPinButtonToggle?: (pinned: boolean) => void;
}
/**
 * The `ObjectPageAnchorBar` bar contains the expand/collapse (expands or collapses the header content) and pin button (pins the content header).
 */
declare const ObjectPageAnchorBar: import("react").ForwardRefExoticComponent<ObjectPageAnchorBarPropTypes & import("react").RefAttributes<HTMLElement>>;
export { ObjectPageAnchorBar };
