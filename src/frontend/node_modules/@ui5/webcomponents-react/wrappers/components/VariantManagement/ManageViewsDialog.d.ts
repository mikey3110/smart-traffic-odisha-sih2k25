import type { MouseEventHandler, ReactElement } from 'react';
import type { DialogPropTypes } from '../../webComponents/Dialog/index.js';
import type { VariantManagementPropTypes } from './types.js';
import type { VariantItemPropTypes } from './VariantItem.js';
type ManageViewsDialogChildType = boolean | undefined | null | ReactElement<VariantItemPropTypes>;
export interface ManageViewsDialogPropTypes {
    children: ManageViewsDialogChildType | ManageViewsDialogChildType[];
    onAfterClose: DialogPropTypes['onClose'];
    handleSaveManageViews: (e: MouseEventHandler<HTMLElement>, payload: {
        updatedRows: any;
        defaultView: string;
        deletedRows: any;
    }) => void;
    showShare: boolean;
    showApplyAutomatically: boolean;
    showSetAsDefault: boolean;
    showCreatedBy: boolean;
    variantNames: string[];
    showOnlyFavorites?: VariantManagementPropTypes['showOnlyFavorites'];
    onManageViewsCancel?: VariantManagementPropTypes['onManageViewsCancel'];
}
export declare const ManageViewsDialog: (props: ManageViewsDialogPropTypes) => import("react/jsx-runtime").JSX.Element;
export {};
