import ValueState from '@ui5/webcomponents-base/dist/types/ValueState.js';
import type { ReactNode } from 'react';
import type { CommonProps } from '../../types/index.js';
import type { ListItemCustomDomRef, ListItemCustomPropTypes } from '../../webComponents/ListItemCustom/index.js';
export interface MessageItemPropTypes extends Pick<ListItemCustomPropTypes, 'accessibleName' | 'tooltip'>, CommonProps {
    /**
     * Specifies the title of the message
     *
     * __Note:__ Although this prop accepts all HTML Elements, it is strongly recommended that you only use text or `Link` (with `wrappingType="None"`) in order to preserve the intended design.
     */
    titleText: ReactNode;
    /**
     * Specifies the subtitle of the message
     *
     * __Note:__ Although this prop accepts all HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.
     */
    subtitleText?: ReactNode;
    /**
     * Defines the number of messages for a given message type.
     */
    counter?: number;
    /**
     * Specifies the type of the message
     */
    type?: ValueState | keyof typeof ValueState;
    /**
     * Name of a message group the current item belongs to.
     */
    groupName?: string;
    /**
     * Specifies detailed description of the message
     */
    children?: ReactNode | ReactNode[];
}
/**
 * A component used to hold different types of system messages inside the `MessageView` component.
 */
declare const MessageItem: import("react").ForwardRefExoticComponent<MessageItemPropTypes & import("react").RefAttributes<ListItemCustomDomRef>>;
export { MessageItem };
