apiVersion: apps/v1
kind: Deployment
metadata:
  name: smart-traffic-frontend
  namespace: smart-traffic
  labels:
    app: smart-traffic-frontend
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: smart-traffic-frontend
  template:
    metadata:
      labels:
        app: smart-traffic-frontend
        version: v1.0.0
    spec:
      containers:
      - name: frontend
        image: smart-traffic-frontend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: VITE_API_BASE_URL
          value: "http://smart-traffic-backend:8000"
        - name: VITE_WS_URL
          value: "ws://smart-traffic-backend:8000"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /var/cache/nginx
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      securityContext:
        fsGroup: 1001
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: smart-traffic-frontend
  namespace: smart-traffic
  labels:
    app: smart-traffic-frontend
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: smart-traffic-frontend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: smart-traffic-frontend-ingress
  namespace: smart-traffic
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
spec:
  rules:
  - host: smart-traffic.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: smart-traffic-frontend
            port:
              number: 3000
